[tool.poetry]
name = "fastapi-serverless-aws-template"
version = "0.1.0"
description = ""
authors = [
    "FranÃ§ois-Michel L'Heureux"
]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.101.0"
mangum = "^0.17.0"
pydantic = "^2.2.0"
structlog = "^23.1.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
isort = "^5.10.1"
black = ">=22.1.0"  # date based version numbering
bandit = "^1.7.1"
mypy = "^1.5.1"
# fast api local dev
uvicorn = {extras = ["standard"], version = "^0.22.0"}
httpx = "^0.24.0"
###
boto3 = "^1.26.124"
boto3-stubs = {version = "^1.26.124", extras = ["session", "apigateway"]}
ruff = "^0.0.285"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
# See https://beta.ruff.rs/docs/rules/
select = ["B", "D", "E", "F", "I", "T20", "W", "N", "YTT", "ASYNC", "S", "A", "C4", "DTZ", "T10", "PIE", "PT", "RSE", "SLF", "SIM", "TCH", "PTH", "PGH", "PLC", "RUF", "RET"]
# RUF001 can fix false positives like "L'individu" -> "Lindividu" (French word)
ignore = ["D1", "D401", "D413", "N805", "PTH123", "RUF001"]
unfixable = ["F401", "F841", "SIM105"]
pydocstyle = {convention = "google"}
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "SLF001"]
"src/types.py" = ["N802", "N803", "N815"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
namespace_packages = true
ignore_missing_imports = false
check_untyped_defs = true
no_implicit_optional = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
explicit_package_bases = true
plugins = [
  "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true
warn_untyped_fields = true
